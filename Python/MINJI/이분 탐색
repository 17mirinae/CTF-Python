1단계-No.1920-수 찾기
import sys

def BinarySearch(arr, val, low, high):
    if low > high:
        return False
    
    mid = (low + high) // 2
    if arr[mid] > val:
        return BinarySearch(arr, val, low, mid - 1)
    elif arr[mid] < val:
        return BinarySearch(arr, val, mid + 1, high)
    else:
        return True

a = int(input())
A = list(map(int, sys.stdin.readline().split()))
b = int(input())
B = list(map(int, sys.stdin.readline().split()))

A.sort()

for i in B:
    if BinarySearch(A, i, 0, a - 1):
        print(1)
    else:
        print(0)

2단계-No.10816-숫자 카드-2
N = int(input())
N_list = list(map(int, input().split()))
M = int(input())
M_list = list(map(int, input().split()))

#숫자 별로 count 해준다
N_count = {}
for n in N_list:
    try:
        N_count[n] += 1
    except:
        N_count[n] = 1

#Dict형식을 이용하면 빠르게 찾을 수 있다
answer = []
for m in M_list:
    try: 
        answer.append((N_count[m]))
    except:
        answer.append(0)

for i in answer:
    print(i, end = ' ')

3단계-No.1654-랜선 자르기

4단계-No.2805-나무 자르기
