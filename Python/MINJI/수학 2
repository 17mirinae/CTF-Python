1단계-No.1978-소수 찾기
num = int(input())
numArr = list(map(int, input().split()))
res = 0

for i in numArr:
    count = 0
    for j in range(1, i + 1):
        if i % j == 0:
            count += 1
    if count == 2:
        res += 1

print(res)

2단계-No.2581-소수
m = int(input())
n = int(input())
numArr = []

for i in range(m, n + 1):
    count = 0
    for j in range(1, i + 1):
        if i % j == 0:
            count += 1
            if count > 2:
                break
    if count == 2:
        numArr.append(i)

if len(numArr) != 0:
    print(sum(numArr))
    print(min(numArr))
else:
    print("-1")

3단계-No.1929-소수 구하기
import math

def solve(num):
    if num == 1:
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        if num // i == 1:
            break
        elif num % i == 0:
            return False
    return True

m, n = map(int, input().split())

for i in range(m, n + 1):
    if solve(i) == True:
        print(i)

4단계-No.4948-베르트랑 공준 (참고)
N = 123456 * 2 + 1
sieve = [True] * N
for i in range(2, int(N**0.5)+1):
    if sieve[i]:
        for j in range(2*i, N, i):
            sieve[j] = False

def prime_cnt(val):
    cnt = 0
    for i in range(val + 1, val * 2 + 1):
        if sieve[i]:
            cnt += 1
    print(cnt)

while True:
    val = int(input())
    if val == 0:
        break
    prime_cnt(val)

5단계-No.9020-골드바흐의 추측 (참고)
prime = [0 for i in range(10001)]
prime[1] = 1

for i in range(2, 98):
    for j in range(i * 2, 10001, i):
        prime[j] = 1

num = int(input())

for i in range(num):
    a = int(input())
    b = a // 2
    for j in range(b, 1, -1):
        if prime[a - j] == 0 and prime[j] == 0:
            print(j, a - j)
            break

6단계-No.1085-직사각형에서 탈출
x, y, w, h = list(map(int, input().split()))

print(min(x, y, w - x, h - y))

7단계-No.3009-네 번째 점
xCode = []
yCode = []

for i in range(3):
    x, y = map(int, input().split())
    xCode.append(x)
    yCode.append(y)

for i in range(3):
    if xCode.count(xCode[i]) == 1:
        x = xCode[i]
    if yCode.count(yCode[i]) == 1:
        y = yCode[i]

print(x, y)

8단계-No.4153-직각삼각형
while True:
    a, b, c = map(int, input().split())
    numArr = []
    numArr.append(a)
    numArr.append(b)
    numArr.append(c)
    numArr.sort()
    
    if a == 0 and b == 0 and c == 0:
        break
    elif numArr[0] * numArr[0] + numArr[1] * numArr[1] == numArr[2] * numArr[2]:
        print("right")
    else:
        print("wrong")

9단계-No.3053-택시 기하학 (참고)
import math

radius = int(input())

print('%.4f' %(math.pi * radius * radius))
print('%.4f' %(radius * radius * 2))

10단계-No.1002-터렛 (참고)
import math

num = int(input()) # 테스트 케이스의 수

for i in range(num):
    x1, y1, r1, x2, y2, r2 = map(int, input().split())
    dis = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2) # 중심의 거리
    
    if dis == 0:
        if r1 == r2:
            print("-1")
        else:
            print("0")
    else:
        if dis < r1 + r2:
            if (dis + min(r1, r2)) == max(r1, r2):
                print("1")
            elif (dis + min(r1, r2) < max(r1, r2)):
                print("0")
            else:
                print("2")
        elif dis == r1 + r2:
            print("1")
        else:
            print("0")
