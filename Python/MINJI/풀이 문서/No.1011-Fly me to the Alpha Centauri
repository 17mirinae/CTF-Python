거리(y-x)	이동 변화	작동 횟수	제곱 여부
1	1	1	O
2	11	2	 
3	111	3	 
4	121	3	O
5	1211	4	 
6	1221	4	 
7	12211	5	 
8	12221	5	 
9	12321	5	O
10	123211	6	 
11	123221	6	 
12	123321	6	 
13	1233211	7	 
14	1233221	7	 
15	1233321	7	 
16	1234321	7	O
17	12343211	8	 
…	…	…	…
위 표는 정해진 규칙에 맞게 작동횟수가 최소가 되기 위한 이동 변화다.
보면 제곱수(N^2)를 중심으로 작동횟수가 바뀌는 것을 알 수 있다.
우리가 해야 하는 것은 단순히 특정 거리 dist가 어떤 범위에 속하는지를 찾아서 N값을 구한 뒤,
최소 워프 횟수를 계산해내는 것이다.

최소 워프 횟수는 결국
  1) N^2보다 작거나 같은 영역이라면
    warpCount = N*2 - 1
  2) N^2보다 크면
    warpCount = N*2
가 된다.

case_num = int(input()) # 테스트 케이스의 개수
ans = []
for i in range(case_num):
    a, b = map(int, input().split()) # 현재 위치, 목표 위치
    num = b-a # 위치 사이의 거리
    k = 1
    p = 1
    while num > 0:
        num -= k
        k += 1
        if num >= p:
            num -= p
            p += 1

    ans.append(k+p-2)

for i in ans:
    print(i)
