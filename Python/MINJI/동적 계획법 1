1단계-No.2748-피보나치 수-2
num = int(input())

arr = [0 for _ in range(num + 1)]

arr[1] = 1

for i in range(2, num + 1):
    arr[i] = arr[i - 1] + arr[i - 2]

print(arr[-1])

2단계-No.1003-피보나치 함수
def fib(num):
    countZero = [1, 0]
    countOne = [0, 1]
    
    if num <= 1:
        return
    
    for i in range(2, num + 1):
        countZero.append(countZero[i - 1] + countZero[i - 2])
        countOne.append(countOne[i - 1] + countOne[i - 2])
    
    return countZero, countOne

turn = int(input()) # 테스트 케이스의 개수

countZero, countOne = fib(40) # 수열 만들어주기

for _ in range(turn):
    num = int(input())
    print("%d %d" %(countZero[num], countOne[num]))

3단계-No.1904-01타일
num = int(input())

arr = [0 for _ in range(1000001)]
arr[1] = 1
arr[2] = 2

for i in range(3, num + 1):
    arr[i] = ((arr[i - 2] % 15746) + (arr[i - 1] % 15746)) % 15746

print(arr[num])

4단계-No.9461-파도반 수열
turn = int(input())

arr = [0 for _ in range(101)]

arr[0] = 1
arr[1] = 1
arr[2] = 1

for i in range(3, 101):
    arr[i] = arr[i - 2] + arr[i - 3]

for i in range(turn):
    num = int(input())
    print(arr[num - 1])

5단계-No.1149-RGB거리
turn = int(input())

arr = []

for i in range(turn):
    arr.append(list(map(int, input().split())))

for i in range(1, len(arr)):
    arr[i][0] = min(arr[i - 1][1], arr[i - 1][2]) + arr[i][0]
    arr[i][1] = min(arr[i - 1][0], arr[i - 1][2]) + arr[i][1]
    arr[i][2] = min(arr[i - 1][0], arr[i - 1][1]) + arr[i][2]

print(min(arr[turn - 1][0], arr[turn - 1][1], arr[turn - 1][2]))
